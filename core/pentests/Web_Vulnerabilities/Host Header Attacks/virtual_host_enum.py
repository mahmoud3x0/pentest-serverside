import requests
#import hashlib
import validators

def check_response(url, header, value):
    headers = {header: value}

    response1 = requests.get(url)
    content_length1 = len(response1.content)
 #   hash_value1 = hashlib.sha256(response1.content).hexdigest()

    response2 = requests.get(url, headers=headers)
    if response2.status_code == 200:
        content_length2 = len(response2.content)
  #      hash_value2 = hashlib.sha256(response2.content).hexdigest()
        return content_length1 == content_length2
def host_header_attack(url):
    host = "evil.com"
    flag = 0
    try:
        header_list = ["Host", "X-Forwarded-For", "X-Forwarded-Host", "X-Host"]
        for header in header_list:
            flag = flag or check_response(url, header, host)
    except requests.exceptions as e:
        print("An error occurred, please try again")

    if flag:
        print("[+] possible vulnerable to host header attacks")
    else:
        print("[-] not vulnerable!")

if __name__ == "__main__":

    while True:
        url = input("Enter the target url: ")
        if validators.url(url):
            host_header_attack(url)
        else:
            print("Enter a valid URL like: https://www.target.com")
